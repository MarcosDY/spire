#!/bin/bash

check-x509Authorities() {
  local expectedBundle=$1
  local containerName=$2

  local difference=""
  local x509Authorities=""
  # Check at most 30 times (with one second in between) that the server has
  # successfully synced down the local authorities.
  local MAXCHECKS=30
  local CHECKINTERVAL=1

  for ((i=1;i<=MAXCHECKS;i++)); do
    log-info "checking for x509 authorities propagation ($i of $MAXCHECKS max)..."

    x509Authorities=$(docker compose exec -T ${containerName} \
      /opt/spire/bin/spire-server bundle show -output json | jq '.x509_authorities' -c)

    difference=$(diff <(echo $expectedBundle) <(echo $x509Authorities))
    if [[ $difference == "" ]];
    then
      return
    fi

    log-info "difference: $difference"

    sleep "${CHECKINTERVAL}"
  done

  fail-now "Expected bundle: $expectedBundle \n got: $x509Authorities \n difference: $difference"
}
# Initial check for x509 authorities in root-server
x509Authorities=$(docker compose exec -T root-server \
  /opt/spire/bin/spire-server bundle show -output json | jq '.x509_authorities' -c)

amountBundles=$(echo $x509Authorities | jq length)

# Ensure only one bundle is present at the start
if [[ $amountBundles -ne 1 ]]; then
  fail-now "Only one bundle expected at start"
fi

# Check x509 authorities propagation across all servers
for server in intermediateA-server intermediateB-server leafA-server leafB-server; do
  check-x509Authorities "$x509Authorities" "$server"
done

# Prepare authority
preparedAuthorityID=$(docker compose exec -T -e SPIRE_SERVER_FFLAGS=forced_rotation root-server \
  /opt/spire/bin/spire-server localauthority x509 prepare -output json | jq -r .prepared_authority.authority_id)

# Verify that the prepared authority is logged
searching="X509 CA prepared.*local_authority_id=${preparedAuthorityID}"
check-log-line root-server "$searching"

# Check for updated x509 authorities in root-server
x509Authorities=$(docker compose exec -T root-server \
  /opt/spire/bin/spire-server bundle show -output json | jq '.x509_authorities' -c)
amountBundles=$(echo $x509Authorities | jq length)

# Ensure two bundles are present after preparation
if [[ $amountBundles -ne 2 ]]; then
  fail-now "Two bundles expected after prepare"
fi

# Check x509 authorities propagation across all servers again
for server in intermediateA-server intermediateB-server leafA-server leafB-server; do
  check-x509Authorities "$x509Authorities" "$server"
done

