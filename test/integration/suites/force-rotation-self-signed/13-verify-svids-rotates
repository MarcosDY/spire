#!/bin/bash

MAX_RETRIES=10
RETRY_DELAY=2 # seconds between retries

check_tainted_authorities() {
    local server=$1
    local agent=$2
    local agent_dir=$3

    x509Authorities=$(docker compose exec -T "$server" \
        /opt/spire/bin/spire-server \
        bundle show -output json | jq .x509_authorities)

    taintedFound=$(echo "$x509Authorities" | jq '.[] | select(.tainted == true)')
    if [[ -z "$taintedFound" ]]; then
        fail-now "Tainted authority expected"
    fi

    nonTaintedFound=$(echo "$x509Authorities" | jq '.[] | select(.tainted == false)')
    if [[ -z "$nonTaintedFound" ]]; then
        fail-now "Non-tainted authority expected"
    fi

    echo "$nonTaintedFound" | jq -r .asn1 | base64 -d | openssl x509 -inform der > "$agent_dir/agent/non-tainted.pem"

    RETRY_COUNT=0

    while [[ $RETRY_COUNT -lt $MAX_RETRIES ]]; do
        docker compose exec -u 1001 -T "$agent" \
          /opt/spire/bin/spire-agent api fetch x509 \
          -socketPath /opt/spire/sockets/workload_api.sock \
          -write /tmp || fail-now "x509-SVID check failed for $agent"

        docker compose exec -T "$agent" \
            openssl verify -verbose -CAfile /opt/spire/conf/agent/non-tainted.pem \
            -untrusted /tmp/svid.0.pem /tmp/svid.0.pem

        # Check the exit status of the verify command
        if [ $? -eq 0 ]; then
            log-info "SVID rotated"
            break
        else
            RETRY_COUNT=$((RETRY_COUNT + 1))
            echo "Verification failed, retrying in $RETRY_DELAY seconds... ($RETRY_COUNT/$MAX_RETRIES)"
            sleep $RETRY_DELAY
        fi

        # Fail if retries exceed the maximum
        if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            fail-now "Certificate verification failed after $MAX_RETRIES attempts."
        fi
    done
}

# Root
check_tainted_authorities "root-server" "root-agent" "root"

# IntermediateA
check_tainted_authorities "intermediateA-server" "intermediateA-agent" "intermediateA"

# IntermediateB
check_tainted_authorities "intermediateB-server" "intermediateB-agent" "intermediateB"

# LeafA
check_tainted_authorities "leafA-server" "leafA-agent" "leafA"

# LeafB
check_tainted_authorities "leafB-server" "leafB-agent" "leafB"

