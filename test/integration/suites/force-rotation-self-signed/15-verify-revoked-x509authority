#!/bin/bash

#!/bin/bash

MAX_RETRIES=10
RETRY_DELAY=2 # seconds between retries

oldAuthority=$(docker compose exec -T -e SPIRE_SERVER_FFLAGS=forced_rotation root-server \
    /opt/spire/bin/spire-server \
    localauthority x509 show -output json | jq .active.authority_id -r)
log-debug "Revoked authority: $oldAuthority"

agents=("root-agent" "intermediateA-agent" "intermediateB-agent" "leafA-agent" "leafB-agent")
for agent in "${agents[@]}"; do
    RETRY_COUNT=0
    while [[ $RETRY_COUNT -lt $MAX_RETRIES ]]; do
        if docker compose exec -u 1001 -T $agent \
          /opt/spire/bin/spire-agent api fetch x509 \
          -socketPath /opt/spire/sockets/workload_api.sock \
          -write /tmp; then

            bundleCount=$(docker compose exec -T $agent openssl x509 -in /tmp/bundle.0.pem | grep -c "BEGIN CERTIFICATE")
            if [ $bundleCount -eq 1 ]; then
                log-debug "Validation successful for $agent: There is exactly one certificate in the chain."
                break
            else
                log-debug "Validation failed for $agent: Expected 1 certificate, but found $bundleCount. Retrying in $RETRY_DELAY seconds... ($RETRY_COUNT/$MAX_RETRIES)"
            fi
        else
            fail-now "x509-SVID check failed for $agent"
        fi

        RETRY_COUNT=$((RETRY_COUNT + 1))
        sleep $RETRY_DELAY

        # Fail if retries exceed the maximum
        if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            fail-now "Validation failed for $agent: Expected 1 certificate, but found $bundleCount."
        fi
    done

    ski=$(docker compose exec -T $agent openssl x509 -in /tmp/bundle.0.pem -text | grep -A 1 'Subject Key Identifier' | tail -n 1 | tr -d ' ' | tr -d ':' | tr '[:upper:]' '[:lower:]')

    if [ "$ski" == "$oldAuthority" ]; then
        log-debug "Subject Key Identifier matches for $agent: $ski"
    else
        fail-now "Subject Key Identifier does not match for $agent. Found: $ski Expected: $oldAuthority"
    fi
done
